#!/usr/bin/env -S gawk -E

BEGIN{
  config()
  read_args()
  print "1. Loading ITIS lookup data" > "/dev/stderr"
  load_itis()
  print "2. Loading ARCTOS data" > "/dev/stderr"
  load_arctos()
  print "3. Outputting" > "/dev/stderr"
  output()
}

function config(  i, t) {
  PROCINFO["sorted_in"] =  "@ind_str_asc"
  OFS = ","
  split("Catalog #,Accession #,Kingdom,Phylum/Division,Class,Order,Family,Sci. Name:Genus,Sci. Name:Species,Common Name,TSN,Description,Collector,Collection #,Collection Date,Condition,Other Numbers,Cataloger,Catalog Date,Identified By,Ident Date,Locality,Lat LongN/W,Elevation,Habitat,Type Specimen,Field Season", \
        Field, ",")
}

function read_args(    arg) {
  # Read arguments, check, give usage
  for (arg = 1; arg < ARGC; arg++) {
    if      (ARGV[arg] == "-a") {
      ARCTOS = ARGV[arg+1]
      arg++
    }
    else if (ARGV[arg] == "-i") {
      ITIS = ARGV[arg+1]
      arg++
    }
    else if ((ARGV[arg] == "-h") || (ARGV[arg] == "--help"))
      HELP = 1
    else
      error("Error: argument '" ARGV[arg] "' not recognized")
  }
  if (!ARCTOS || !ITIS || HELP)
    error("Usage: itisize \n         "                                  \
          "-i ITIS\n         "                                          \
          "-a ARCTOS_CSV")
}

function load_itis(     Instr) {
  FS="|"
  while (getline < ITIS) {
    Instr = $2 " " $4 " " $5 " " $6
    gsub(/ +$/,"",Instr)
    gsub(/ +/," ",Instr)

    Outstrg[Instr] = $1 " " $2 
    gsub(/^ +/,"",Outstrg[Instr])
    gsub(/ +$/,"",Outstrg[Instr])
    gsub(/ +/," ",Outstrg[Instr])
    Outstrs[Instr] = $3 " " $4 " " $5 " " $6 # " " $7
    gsub(/^ +/,"",Outstrs[Instr])
    gsub(/ +$/,"",Outstrs[Instr])
    gsub(/ +/," ",Outstrs[Instr])

    Tsn[Instr] = $8
    Fam[Instr] = $11
    Ord[Instr] = $12
    Class[Instr] = $13
    Phylum[Instr] = $14
    King[Instr]   = $15
    Common[Instr] = $16
  }
}

function load_arctos(     fn, i) {
  FPAT = "([^,]*)|(\"([^\"]|\"\")+\")"
  while (getline < ARCTOS) {
    # field names
    if (!Line++)
      for (i = 1; i <= NF; i++)
        fn[i] = $i
    # load data
    else
      for (i = 1; i <= NF; i++)
        Data[Line][fn[i]] = $i
    gsub(/subsp\./, "ssp.", Data[Line]["Sci. Name:Species"]) 
  }
}

function output(    instr, nfields, i , j) {
  
  nfields = length(Field)

  # header
  for (j = 1; j <= nfields; j++) {
    printf "%s", Field[j]
    if (j != nfields)
      printf ","
  }
  printf "\n"

  for (i = 2; i <= Line; i++) {

    # match Arctos taxon and update fields from ITIS
    instr = Data[i]["Sci. Name:Genus"] " " Data[i]["Sci. Name:Species"]
    if (Tsn[instr]) {
      Data[i]["TSN"]               = Tsn[instr]
      Data[i]["Kingdom"]           = King[instr]
      Data[i]["Phylum/Division"]   = Phylum[instr]
      Data[i]["Class"]             = Class[instr] 
      Data[i]["Order"]             = Ord[instr]
      Data[i]["Family"]            = Fam[instr]
      Data[i]["Sci. Name:Genus"]   = Outstrg[instr]
      Data[i]["Sci. Name:Species"] = (Outstrs[instr] ~ /,/) ? \
        "\"" Outstrs[instr] "\"" : Outstrs[instr] 
      Data[i]["Common Name"]       = (Common[instr] ~ /,/) ? \
        "\"" Common[instr] "\"" : Common[instr]
    }
    
    for (j = 1; j <= nfields; j++) {
      printf "%s", Data[i][Field[j]]
      if (j != nfields)
        printf ","
    }
    printf "\n"
  }
    
}

function error(msg) {
  print msg > "/dev/stderr"
  exit 1
}
